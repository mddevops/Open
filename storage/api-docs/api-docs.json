{
    "openapi": "3.0.0",
    "info": {
        "title": "Laravel Swagger (FUTURE)",
        "contact": {
            "email": "mddevelop@yandex.ru"
        },
        "version": "1.0.0"
    },
    "servers": [
        {
            "url": "http://127.0.0.1:8000/api/v1",
            "description": "Laravel Swagger API server"
        }
    ],
    "paths": {
        "/notebook": {
            "get": {
                "tags": [
                    "Notebook"
                ],
                "summary": "Get all notebooks",
                "operationId": "notebookAll",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "The page number",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Everything is fine"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Notebook"
                ],
                "summary": "Create a new notebook",
                "operationId": "notebookCreate",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/NotebookStoreRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Everything is fine"
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ]
            }
        },
        "/notebook/{id}": {
            "get": {
                "tags": [
                    "Notebook"
                ],
                "summary": "Get notebook by ID",
                "operationId": "notebookGet",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of notebook",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": "1"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Everything is fine"
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Notebook"
                ],
                "summary": "Update notebook by ID",
                "operationId": "notebookUpdate",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of notebook",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": "1"
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/NotebookStoreRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Everything is fine"
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Notebook"
                ],
                "summary": "Delete notebook by ID",
                "operationId": "notebookDelete",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of notebook",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": "1"
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Deleted"
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ]
            }
        }
    },
    "components": {
        "schemas": {
            "NotebookStoreRequest": {
                "title": "Example storring request",
                "description": "Some simple request create as example",
                "properties": {
                    "fio": {
                        "title": "Name Surname",
                        "description": "Name surname storring",
                        "type": "string",
                        "example": "Mirzoev Daler"
                    },
                    "phone_number": {
                        "title": "Phone number",
                        "description": "Phone number for storring",
                        "type": "integer",
                        "example": "9256444480"
                    },
                    "email": {
                        "title": "Email",
                        "description": "Email for storring",
                        "type": "string",
                        "example": "mddevelop@yandex.ru"
                    },
                    "birthdate": {
                        "title": "Birth date",
                        "description": "Birthdate for storring",
                        "example": "1992-03-10"
                    },
                    "image": {
                        "title": "Image",
                        "description": "Image for storring",
                        "type": "string",
                        "example": "example.jpg"
                    }
                },
                "type": "object"
            }
        },
        "securitySchemes": {
            "X-APP-ID": {
                "type": "apiKey",
                "name": "X-APP-ID",
                "in": "header"
            }
        }
    },
    "security": [
        []
    ]
}